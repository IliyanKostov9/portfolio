# Generated by Django 5.2.4 on 2025-10-21 21:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BlogCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(verbose_name="Name of the category")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(verbose_name="Username of the user")),
                ("email", models.CharField(verbose_name="Email of the user")),
                ("password", models.CharField(verbose_name="Password of the user")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Blog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Title of the blog"),
                ),
                (
                    "image_preview",
                    models.CharField(
                        max_length=30, verbose_name="Image preview of the blog"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        max_length=30, verbose_name="Date of the blog being posted"
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        verbose_name="Name of the page of the blog, where the user can navigate to"
                    ),
                ),
                (
                    "read_time_mins",
                    models.IntegerField(
                        verbose_name="Number of minutes for the reader to read the blog"
                    ),
                ),
                ("row", models.IntegerField(verbose_name="Row number of the blog")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blogs.blogcategory",
                        verbose_name="Category of which blog it belongs to (life, technology, project, etc)",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.CharField(verbose_name="Message on the comment")),
                (
                    "blogs",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blogs.blog",
                        verbose_name="Blogs for which the comments are commented about",
                    ),
                ),
                ("reply", models.ManyToManyField(blank=True, to="blogs.comment")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="blogs.user"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
