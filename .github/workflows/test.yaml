name: Test

on:
  pull_request:
    types: [opened, synchronize, reopened]

    branches:
      - master
    paths:
      - "**"
      - "!.gitignore"
      - "!README.md"

jobs:
  checkout:
    name: Checkout repo
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Save repo to artifact
        uses: actions/upload-artifact@v4
        with:
          name: portfolio
          path: .
          overwrite: true
          include-hidden-files: true
          if-no-files-found: error
          retention-days: 0

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: checkout
    if: ${{ github.actor != 'dependabot[bot]' }}
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.11.9"]
    steps:
      - name: Download repo artifact
        uses: actions/download-artifact@v5
        with:
          name: portfolio
          path: .

      - name: Restore venv
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          fail-on-cache-miss: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install deps
        run: |
          pip install uv==0.8.13
          uv venv
          uv sync
          uv sync --group test

      - name: Run tests
        run: |
          . .venv/bin/activate
          make test

      - name: Save venv
        uses: actions/cache/save@v4
        if: always()
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.11.9"]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Download repo artifact
        uses: actions/download-artifact@v5
        with:
          name: portfolio
          path: .

      - name: Restore venv
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          fail-on-cache-miss: true

      - name: Pylint
        run: |
          . .venv/bin/activate
          pylint .

      - name: Black
        run: |
          . .venv/bin/activate
          black --check .

      - name: Flake8
        run: |
          . .venv/bin/activate
          flake8 .

      - name: Restore Pyre cache
        uses: actions/cache/restore@v4
        with:
          path: .pyre
          key: pyre-cache

      - name: Pyre analysis
        run: |
          . .venv/bin/activate
          pyre --output=json | python3 -m json.tool

      - name: Pysa analysis
        run: |
          . .venv/bin/activate
          pyre --noninteractive analyze --no-verify --use-cache --output-format json

      - name: Save Pyre cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: .pyre
          key: pyre-cache

  pre-checks:
    name: Check if the app is eligable for deployment per Django standards
    runs-on: ubuntu-latest
    needs: test
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.11.9"]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Download repo artifact
        uses: actions/download-artifact@v5
        with:
          name: portfolio
          path: .

      - name: Restore venv
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Check if app is compliant for deployment
        run: |
          . .venv/bin/activate
          make check

      - name: Check if the migrations are backwards compatible
        run: |
          . .venv/bin/activate
          make migrate-check
